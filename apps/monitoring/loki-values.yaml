loki:
  auth_enabled: false  # CRITICAL: Disable auth for single-tenant homelab
  
  commonConfig:
    replication_factor: 1  # CRITICAL: Must be 1 for single replica
  
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: filesystem  # KEEP filesystem for now
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  
  pattern_ingester:
    enabled: true
  
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 7d  # 7 days for homelab
  
  ruler:
    enable_api: true
  
  # Storage configuration for filesystem (UNCHANGED)
  storage:
    type: filesystem
    bucketNames:
      chunks: chunks
      ruler: ruler
      admin: admin
  
  # Additional homelab-specific limits
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 7d
    ingestion_rate_mb: 16
    ingestion_burst_size_mb: 32
    max_query_length: 12000h
    reject_old_samples: true
    reject_old_samples_max_age: 168h

# Disable MinIO (we're using filesystem)
minio:
  enabled: false

# CRITICAL: Set deployment mode
deploymentMode: SingleBinary

# Single binary configuration
singleBinary:
  replicas: 1
  #Serbice Label for ServiceMonitoring log scraping
  service:
    labels:
      app.kubernetes.io/component: single-binary
  
  # Resources for homelab
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  # Persistence for filesystem storage (KEEP EXISTING)
  persistence:
    enabled: true
    storageClass: local-path
    accessModes:
      - ReadWriteOnce
    size: 30Gi

# CRITICAL: Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

# Gateway configuration (NGINX reverse proxy)
gateway:
  enabled: true
  replicas: 1
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  
  # Ingress configuration
  ingress:
    enabled: true
    hosts:
      - host: loki.milenika.dev
        paths:
          - path: /
            pathType: Prefix
    annotations:
      "kubernetes.io/ingress.class": "traefik"
      "external-dns.alpha.kubernetes.io/target": "52e6c172-8b5e-4167-b68f-20dd50299c3c.cfargotunnel.com"
      "external-dns.alpha.kubernetes.io/cloudflare-proxied": "true"
    tls:
      - secretName: loki-gateway-tls
        hosts:
          - loki.milenika.dev

# Disable test
test:
  enabled: false

# Reduce cache memory for homelab
chunksCache:
  enabled: true
  allocatedMemory: 500  # Reduced from default 8GB

resultsCache:
  enabled: true
  allocatedMemory: 300  # Reduced from default

# ENABLE monitoring, dashboards, AND self-monitoring
monitoring:
  # Enable official Loki dashboards
  dashboards:
    enabled: true
    labels:
      grafana_dashboard: "1"
    annotations:
      grafana_folder: "Loki"
  
  # Enable recording rules for better dashboard performance
  rules:
    enabled: true
    alerting: false  # Disable alerts for homelab simplicity
  
  # ENABLE self-monitoring - Loki monitors itself
  selfMonitoring:
    enabled: true
    tenant:
      name: "self-monitoring"
      # Password will be auto-generated
    grafanaAgent:
      # Install Grafana Agent Operator to scrape Loki's own logs
      installOperator: true
  
  # Enable Loki canary for health monitoring
  lokiCanary:
    enabled: true
    resources:
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 25m
        memory: 32Mi
