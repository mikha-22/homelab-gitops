# apps/monitoring/loki-values.yaml

# This configuration is compatible with Loki Helm chart v6.6.0

loki:
  # This block contains the configuration for the Loki application itself.
  # It's equivalent to your old `loki:` block.
  config:
    auth_enabled: false
    
    ingester:
      chunk_idle_period: 5m
      chunk_target_size: 1536000
      max_chunk_age: 1h
      
    schema_config:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: loki_index_
            period: 24h

    storage_config:
      filesystem:
        directory: /data/loki/chunks

    limits_config:
      allow_structured_metadata: true
      retention_period: 7d
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      max_query_length: 12000h
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      
    ruler:
      enable_api: true
      
# Chart-level configurations
# These settings control the Kubernetes resources deployed by the chart.

# Use a StatefulSet for persistence
deploymentMode: StatefulSet

# Resource limits for the Loki pod
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Persistence configuration
persistence:
  enabled: true
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  
# Ingress configuration for the Loki gateway
ingress:
  enabled: true
  ingressClassName: traefik
  hosts:
    - host: loki.milenika.dev
      paths:
        - path: /
          pathType: Prefix
  annotations:
    "kubernetes.io.ingress.class": "traefik"
    "external-dns.alpha.kubernetes.io/target": "e0995bb5-0641-44ba-9ac6-533e678117a2.cfargotunnel.com"
    "external-dns.alpha.kubernetes.io/cloudflare-proxied": "true"
  tls:
    - secretName: loki-gateway-tls
      hosts:
        - loki.milenika.dev

# Enable ServiceMonitor for Prometheus to scrape Loki's metrics
serviceMonitor:
  enabled: true

# Disable test pod
test:
  enabled: false
