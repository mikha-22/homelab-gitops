# apps/monitoring/tempo-values.yaml
# MINIMAL WORKING CONFIGURATION - FIXED resource placement under tempo.resources

# Basic deployment
replicas: 1

# Persistence
persistence:
  enabled: true
  storageClassName: local-path
  size: 10Gi

# Enable ServiceMonitor for Prometheus
serviceMonitor:
  enabled: true

# Tempo configuration using chart structure
tempo:
  # FIXED: Resources go under tempo.resources according to chart defaults
  resources:
    requests:
      cpu: 500m
      memory: 4Gi
    limits:
      cpu: 1000m
      memory: 8Gi

  # Basic settings
  multitenancyEnabled: false
  reportingEnabled: false
  retention: 168h  # 7 days
  memBallastSizeMbs: 2048  # Set memory ballast to 2GB for stability
  
  # Server configuration - CRITICAL: Port must match health checks
  server:
    http_listen_port: 3200
  
  # Health check configuration - MUST match the server port
  livenessProbe:
    httpGet:
      path: /ready
      port: 3200
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /ready
      port: 3200
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  # Enable metrics generator with proper remote write
  metricsGenerator:
    enabled: true
    remoteWriteUrl: "http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090/api/v1/write"
