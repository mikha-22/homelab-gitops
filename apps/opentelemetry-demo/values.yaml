# apps/opentelemetry-demo/values.yaml (Global Override Only)

# Using the global override to set defaults for all components.
default:
  envOverrides:
    - name: OTEL_EXPORTER_OTLP_PROTOCOL
      value: "grpc"
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: "http://otel-demo-otel-collector:4317"

# 1. Disable bundled observability tools.
jaeger:
  enabled: false
prometheus:
  enabled: false
grafana:
  enabled: false
opensearch:
  enabled: false

# 2. Configure the demo's built-in collector to forward data to our LGTM stack.
opentelemetry-collector:
  enabled: true
  fullnameOverride: otel-collector
  config:
    receivers:
      otlp:
        protocols:
          grpc: {}

    processors:
      batch: {}
      memory_limiter:
        limit_mib: 512
        spike_limit_mib: 128

    connectors: {}

    exporters:
      otlp/tempo:
        endpoint: "http://tempo.monitoring.svc.cluster.local:4317"
        tls:
          insecure: true
      
      prometheusremotewrite:
        endpoint: "http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090/api/v1/write"
        remote_write_queue:
          enabled: true
      
      loki:
        endpoint: "http://loki-gateway.monitoring.svc.cluster.local:3100/loki/api/v1/push"

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [otlp/tempo]
        metrics:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [prometheusremotewrite]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [loki]

# 3. Define component-specific settings (ingress, resources) without env overrides.
components:
  frontend:
    # Per-component envOverrides removed.
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  frontend-proxy:
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        external-dns.alpha.kubernetes.io/target: "e0995bb5-0641-44ba-9ac6-533e678117a2.cfargotunnel.com"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        traefik.ingress.kubernetes.io/router.middlewares: "monitoring-security-headers@kubernetescrd"
      hosts:
        - host: "otel-demo.milenika.dev"
          paths:
            - path: /
              pathType: Prefix
              port: 8080
      tls:
        - secretName: otel-demo-tls
          hosts:
            - "otel-demo.milenika.dev"

  ad:
    resources:
      limits: { memory: "300Mi", cpu: "200m" }
      requests: { memory: "180Mi", cpu: "100m" }

  cart:
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "160Mi", cpu: "100m" }

  checkout:
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  currency:
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  email:
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  payment:
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  product-catalog:
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  recommendation:
    resources:
      limits: { memory: "500Mi", cpu: "200m" }
      requests: { memory: "200Mi", cpu: "100m" }

  shipping:
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  load-generator:
    envOverrides:
      - name: LOCUST_USERS
        value: "5"
      - name: LOCUST_SPAWN_RATE
        value: "1"
