# apps/opentelemetry-demo/values.yaml - USE SERVICE INSTEAD OF NODE IP

# 1. Disable bundled observability tools
jaeger:
  enabled: false
prometheus:
  enabled: false
grafana:
  enabled: false
opensearch:
  enabled: false

# 2. Disable the demo's built-in collector
opentelemetry-collector:
  enabled: false

# 3. Global configuration - REMOVE HOST_IP, NOT NEEDED ANYMORE
default:
  envOverrides:
    # REMOVE the node IP reference since we're using service now
    # - name: OTEL_K8S_NODE_INTERNAL_IP
    #   valueFrom:
    #     fieldRef:
    #       apiVersion: v1
    #       fieldPath: status.hostIP
    # ADD GLOBAL DEBUG LOGGING - applies to ALL components
    - name: OTEL_LOG_LEVEL
      value: "debug"
    - name: OTEL_SDK_DEBUG
      value: "true"

# 4. Configure components - USE SERVICE ENDPOINT
components:
  frontend:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
      # ADD sampler and debug env vars here
      - name: OTEL_TRACES_SAMPLER
        value: "always_on"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  frontend-proxy:
    envOverrides:
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
      # ADD sampler and debug env vars here
      - name: OTEL_TRACES_SAMPLER
        value: "always_on"
      # OVERRIDE existing collector vars (don't add duplicates)
      - name: OTEL_COLLECTOR_NAME
        value: "otel-collector-opentelemetry-collector.monitoring.svc.cluster.local"
      - name: OTEL_COLLECTOR_HOST
        value: "otel-collector-opentelemetry-collector.monitoring.svc.cluster.local"

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        external-dns.alpha.kubernetes.io/target: "e0995bb5-0641-44ba-9ac6-533e678117a2.cfargotunnel.com"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        traefik.ingress.kubernetes.io/router.middlewares: "monitoring-security-headers@kubernetescrd"
      hosts:
        - host: "otel-demo.milenika.dev"
          paths:
            - path: /
              pathType: Prefix
              port: 8080
      tls:
        - secretName: otel-demo-tls
          hosts:
            - "otel-demo.milenika.dev"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  ad:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "300Mi", cpu: "200m" }
      requests: { memory: "180Mi", cpu: "100m" }

  cart:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "160Mi", cpu: "100m" }

  checkout:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  currency:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  email:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  payment:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  product-catalog:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  recommendation:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "500Mi", cpu: "200m" }
      requests: { memory: "200Mi", cpu: "100m" }

  shipping:
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }

  load-generator:
    env:
      - name: LOCUST_USERS
        value: "5"
      - name: LOCUST_SPAWN_RATE
        value: "1"
      # ADD LOGGING TO LOAD GENERATOR TOO
      - name: LOCUST_LOGLEVEL
        value: "INFO"
    envOverrides:
      # CHANGE: Use service instead of node IP
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://otel-collector-opentelemetry-collector.monitoring.svc.cluster.local:4317"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "grpc"
    resources:
      limits: { memory: "200Mi", cpu: "200m" }
      requests: { memory: "100Mi", cpu: "100m" }
