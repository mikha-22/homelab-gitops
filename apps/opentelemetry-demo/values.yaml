# apps/opentelemetry-demo/values.yaml

# Global settings
global:
  domain: milenika.dev

# Configure OpenTelemetry Collector to send data directly to your LGTM stack
opentelemetry-collector:
  enabled: true
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
        send_batch_max_size: 2048
      
      memory_limiter:
        limit_mib: 512
        spike_limit_mib: 128

      groupbytrace:
        wait_duration: 3s
        num_traces: 1000

      transform:
        trace_statements:
          - context: resource
            statements:
              - set(attributes["service.name"], attributes["rootServiceName"]) where attributes["rootServiceName"] != nil

    connectors:
      spanmetrics:
        histogram:
          explicit:
            buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
        dimensions:
          - name: http.method
            default: GET
          - name: http.status_code
        exemplars:
          enabled: true
        aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
        metrics_flush_interval: 15s
        
    exporters:
      otlp/tempo:
        endpoint: http://tempo.monitoring.svc.cluster.local:4317
        tls:
          insecure: true
      
      prometheusremotewrite:
        endpoint: http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local:9090/api/v1/write
        remote_write_queue:
          enabled: true
          queue_size: 10000
          num_consumers: 5
      
      loki:
        endpoint: http://loki-gateway.monitoring.svc.cluster.local:3100/loki/api/v1/push
        
      debug:
        verbosity: normal
        
    service:
      telemetry:
        metrics:
          address: 0.0.0.0:8888
      pipelines:
        traces:
          receivers: [otlp]
          processors: [transform, memory_limiter, groupbytrace, batch]
          exporters: [spanmetrics, otlp/tempo, debug]
        metrics:
          receivers: [otlp, spanmetrics]
          processors: [memory_limiter, batch]
          exporters: [prometheusremotewrite, debug]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [loki, debug]

# UPDATED: The top-level key for components was renamed from 'components' to 'apps' in this chart version.
apps:
  frontend:
    resources:
      limits:
        memory: 200Mi
        cpu: 200m
      requests:
        memory: 100Mi
        cpu: 100m

  frontendProxy:
    enabled: true
    resources:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 50m
    service:
      type: ClusterIP
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        external-dns.alpha.kubernetes.io/target: "e0995bb5-0641-44ba-9ac6-533e678117a2.cfargotunnel.
